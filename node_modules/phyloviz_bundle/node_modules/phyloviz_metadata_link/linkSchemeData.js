
function linkSchemeData(linkInformation, callback){

	var graph = linkInformation.graphObject.graphInput;
	var propertyIndex = linkInformation.data_link_info.propertyIndex;

	gatherSchemeData(graph, propertyIndex, function(results){
		linkInformation.data_link_info.objectOfTotal = results.objectOfTotal;
		linkInformation.data_link_info.objectOfType = results.objectOfType;
		linkInformation.data_link_info.countProperties = results.countProperties;
		
		callback();
	});
}


function gatherSchemeData(graph, propertyIndex, callback){

	var objectOfTotal = {};
	var objectOfProfile = {};
	var countProperties = 0;

	graph.nodes.forEach(function(node){

	    objectOfProfile[node.key] = [];
	    var numberTypes = 0;

    	var schemeGenes = graph.schemeGenes.slice();
			schemeGenes.shift();

        if(objectOfTotal[String(node.profile[propertyIndex])]) objectOfTotal[String(node.profile[propertyIndex])] += 1;
        else{
            objectOfTotal[String(node.profile[propertyIndex])] = 1;
            countProperties += 1;
          }

        if(objectOfProfile[node.key][String(node.profile[propertyIndex])]) objectOfProfile[node.key][String(node.profile[propertyIndex])] += 1;
        else{
          numberTypes += 1;
          objectOfProfile[node.key][String(node.profile[propertyIndex])] = 1;
        }
			

	});

	var results = {
  		objectOfTotal: objectOfTotal,
  		objectOfType: objectOfProfile,
  		countProperties: countProperties
  	}

	callback(results);

}

module.exports = linkSchemeData;