
function linkMetadata(linkInformation, callback){

	var graph = linkInformation.graphObject.graphInput;
	var propertyIndex = linkInformation.data_link_info.propertyIndex;

	gatherMetadata(graph, propertyIndex, function(results){
		linkInformation.data_link_info.objectOfTotal = results.objectOfTotal;
		linkInformation.data_link_info.objectOfType = results.objectOfType;
		linkInformation.data_link_info.countProperties = results.countProperties;

		callback();
	});
}


function gatherMetadata(graph, propertyIndex, callback){

	var objectOfTotal = {};
	var objectOfType = {};

	var countProperties = 0;
	var maxDiffProperties = 1;

	graph.nodes.forEach(function(node){

		objectOfType[node.key] = [];
		var numberTypes = 0;


		if (node.isolates.length > 0){

		  for (i = 0; i < node.isolates.length; i++){

		      if(objectOfTotal[String(node.isolates[i][propertyIndex])]) objectOfTotal[String(node.isolates[i][propertyIndex])] += 1;
		      else{
		        objectOfTotal[String(node.isolates[i][propertyIndex])] = 1;
		        countProperties += 1;
		      } 

      		  if(objectOfType[node.key][String(node.isolates[i][propertyIndex])]) objectOfType[node.key][String(node.isolates[i][propertyIndex])] += 1;
		      else{
		        numberTypes += 1;
		        objectOfType[node.key][String(node.isolates[i][propertyIndex])] = 1;
		      } 
		      
		  }
		}
		

  	});

  	var results = {
  		objectOfTotal: objectOfTotal,
  		objectOfType: objectOfType,
  		countProperties: countProperties
  	}

  	callback(results);
}

module.exports = linkMetadata;