var linkMetadata = require('./linkMetadata.js');
var linkSchemeData = require('./linkSchemeData.js');
var changeNodeUIData = require('./changeNodeUIData.js');
var utils = require('./link_utils.js');
var phylovizUtils = require('phyloviz_utils');


function phyloviz_link(graphObject, callback){

	var arrayColorsIsolates = [];
	var arrayColorsProfiles = [];
	var property_IndexIsolates = {};

	phylovizObject = {
		graphObject: graphObject,
		data_link_info: {},
		Utils: phylovizUtils
	}

	phylovizObject.data_link_info.linkMethod = graphObject.linkMethod;
	phylovizObject.data_link_info.propertyIndex = graphObject.propertyIndex;

	utils.getDataFromNodes(phylovizObject, function(DataFromIndex){
		phylovizObject.data_link_info.DataFromIndex = DataFromIndex;

		utils.gatherDuplicatesAndCounts(DataFromIndex, function(data){
			phylovizObject.data_link_info.dataArray = data;

			utils.getColors(data, function(results){
				phylovizObject.data_link_info.arrayColors = results.arrayColors;
				phylovizObject.data_link_info.propertyIndexes = results.propertyIndex;

				if (phylovizObject.data_link_info.linkMethod == 'isolates'){
					linkMetadata(phylovizObject, function(){
						changeNodeUIData(phylovizObject, function(){
							callback(phylovizObject);
						});
					});
				}
				else if(phylovizObject.data_link_info.linkMethod == 'profiles'){
					linkSchemeData(phylovizObject, function(){
						changeNodeUIData(phylovizObject, function(){
							callback(phylovizObject);
						});

					});
				}
			});
		});
	});

}

module.exports = phyloviz_link;


