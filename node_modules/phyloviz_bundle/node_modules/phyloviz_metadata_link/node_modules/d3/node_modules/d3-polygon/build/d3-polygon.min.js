!function(n,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define("d3-polygon",["exports"],r):r(n.d3_polygon={})}(this,function(n){"use strict";function r(n){for(var r,o=-1,t=n.length,e=n[t-1],f=0;++o<t;)r=e,e=n[o],f+=r[1]*e[0]-r[0]*e[1];return f/2}function o(n){for(var r,o,t=-1,e=n.length,f=0,u=0,l=n[e-1],i=0;++t<e;)r=l,l=n[t],i+=o=r[0]*l[1]-l[0]*r[1],f+=(r[0]+l[0])*o,u+=(r[1]+l[1])*o;return i*=3,[f/i,u/i]}function t(n,r,o){return(r[0]-n[0])*(o[1]-n[1])-(r[1]-n[1])*(o[0]-n[0])}function e(n,r){return n[0]-r[0]||n[1]-r[1]}function f(n){for(var r=n.length,o=[0,1],e=2,f=2;r>f;++f){for(;e>1&&t(n[o[e-2]],n[o[e-1]],n[f])<=0;)--e;o[e++]=f}return o.slice(0,e)}function u(n){if((o=n.length)<3)return null;var r,o,t=new Array(o),u=new Array(o);for(r=0;o>r;++r)t[r]=[+n[r][0],+n[r][1],r];for(t.sort(e),r=0;o>r;++r)u[r]=[t[r][0],-t[r][1]];var l=f(t),i=f(u),g=i[0]===l[0],h=i[i.length-1]===l[l.length-1],p=[];for(r=l.length-1;r>=0;--r)p.push(n[t[l[r]][2]]);for(r=+g;r<i.length-h;++r)p.push(n[t[i[r]][2]]);return p}function l(n,r){for(var o,t,e=n.length,f=n[e-1],u=r[0],l=r[1],i=f[0],g=f[1],h=!1,p=0;e>p;++p)f=n[p],o=f[0],t=f[1],t>l!=g>l&&(i-o)*(l-t)/(g-t)+o>u&&(h=!h),i=o,g=t;return h}function i(n){for(var r,o,t=-1,e=n.length,f=n[e-1],u=f[0],l=f[1],i=0;++t<e;)r=u,o=l,f=n[t],u=f[0],l=f[1],r-=u,o-=l,i+=Math.sqrt(r*r+o*o);return i}var g="0.2.0";n.version=g,n.polygonArea=r,n.polygonCentroid=o,n.polygonHull=u,n.polygonContains=l,n.polygonLength=i});